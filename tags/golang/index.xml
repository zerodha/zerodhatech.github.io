<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>golang on Zerodha Tech Blog</title><link>https://zerodha.tech/tags/golang/</link><description>Recent content in golang on Zerodha Tech Blog</description><generator>Hugo -- gohugo.io</generator><language>en-us</language><lastBuildDate>Wed, 14 Feb 2024 00:00:00 +0530</lastBuildDate><atom:link href="https://zerodha.tech/tags/golang/index.xml" rel="self" type="application/rss+xml"/><item><title>1.5+ million PDFs in 25 minutes</title><link>https://zerodha.tech/blog/1-5-million-pdfs-in-25-minutes/</link><pubDate>Wed, 14 Feb 2024 00:00:00 +0530</pubDate><guid>https://zerodha.tech/blog/1-5-million-pdfs-in-25-minutes/</guid><description>At Zerodha, many million users login and use our financial platforms every day. Over the recent months, on an average day, 1.5+ million users have been executing stock and derivative transactions. On a volatile day, this number could easily double. After a trading session concludes and all the number-crunching, tallying, and “backoffice” operations are completed—with file dumps received from stock exchanges and other market infrastructure institutions—stock brokers e-mail a digitally signed PDF report called the contract note to every user who transacted on that particular day.</description></item><item><title>A lesson in creating and using niche business DSLs at scale</title><link>https://zerodha.tech/blog/a-lesson-in-niche-business-dsls-at-scale/</link><pubDate>Tue, 24 Nov 2020 17:35:00 +0530</pubDate><guid>https://zerodha.tech/blog/a-lesson-in-niche-business-dsls-at-scale/</guid><description>At Zerodha, we process millions of trades in real-time, where each trade comes into the system as concurrent high throughput HTTP requests. Each trade increases the latency for subsequent orders in the queue that are under processing at the same time at our OMS (Order Management System). When a single order comes through to the OMS, it goes through a bunch of computationally intensive validations and adds to the latency. To reduce the latency of orders, we decided to offload some of these business validations from the OMS into an external component called Veto, which pre-validates incoming orders based on custom dynamic rules set by our Risk Management team.</description></item></channel></rss>